
server:
  port: 10001
spring:
  application:
    name: niit-rick-gateway
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
        username: nacos
        password: nacos

    gateway:
      routes: # 网关路由配置
        - id: niit-rick-auth # 路由id，自定义，只要唯一即可
          # uri: http://127.0.0.1:8081 # 路由的目标地址 http就是固定地址
          uri: lb://niit-rick-auth # 路由的目标地址 lb就是负载均衡，后面跟服务名称
          predicates: # 路由断言，也就是判断请求是否符合路由规则的条件
            - Path=/auth/** # 这个是按照路径匹配，只要以/user/开头就符合要求
        - id: niit-rick-xtimer # 路由id，自定义，只要唯一即可
          # uri: http://127.0.0.1:8081 # 路由的目标地址 http就是固定地址
          uri: lb://niit-rick-xtimer
          predicates:
            - Path=/xtimer/**
          filters:
            - RewritePath=/xtimer/(?<segment>.*), /$\{segment}
        - id: niit-rick-seckill # 路由id，自定义，只要唯一即可
          uri: lb://niit-rick-seckill # 路由的目标地址 lb就是负载均衡，后面跟服务名称
          predicates: # 路由断言，也就是判断请求是否符合路由规则的条件
            - Path=/sec_kill/** # 这个是按照路径匹配，只要以/user/开头就符合要求
        - id: niit-rick-testconsumer
          uri: lb://niit-rick-demo
          predicates:
            - Path=/demo/**
          filters:
            - AuthenticationFilter
        - id: niit-rick-lottery # 路由id，自定义，只要唯一即可
          # uri: http://127.0.0.1:8081 # 路由的目标地址 http就是固定地址
          uri: lb://niit-rick-lottery
          predicates:
            - Path=/lottery/**
          filters:
            - AuthenticationFilter
        - id: niit-rick-admin # 路由id，自定义，只要唯一即可
          uri: lb://niit-rick-admin
          predicates:
            - Path=/admin/**
         # filters:
         #   - AuthenticationFilter
        - id: niit-rick-blog
          uri: lb://niit-rick-blog
          predicates:
            - Path=/blog/**

sa-token:
  # token 名称（同时也是 cookie 名称）
  token-name: x-access-token
  # token 有效期（单位：秒） 默认30天（2592000秒），-1 代表永久有效
  timeout: 2592000
  # token 最低活跃频率（单位：秒），如果 token 超过此时间没有访问系统就会被冻结，默认-1 代表不限制，永不冻结
  active-timeout: -1
  # 是否允许同一账号多地同时登录 （为 true 时允许一起登录, 为 false 时新登录挤掉旧登录）
  is-concurrent: false
  # 在多人登录同一账号时，是否共用一个 token （为 true 时所有登录共用一个 token, 为 false 时每次登录新建一个 token）(jwt模式下恒false)
  is-share: false
  # token 风格（默认可取值：uuid、simple-uuid、random-32、random-64、random-128、tik）(jwt模式下无用)
  token-style: simple-uuid
  # 是否打开自动续签 （如果此值为true，框架会在每次直接或间接调用 getLoginId() 时进行一次过期检查与续签操作）
  auto-renew: true
  # 是否输出操作日志
  is-log: false
  # 日志等级（trace、debug、info、warn、error、fatal）
  log-level: warn
  # 启动时的字符画打印
  is-print: false
  # 是否从cookie读取token
  is-read-cookie: false




